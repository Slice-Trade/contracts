{
	"compiler": {
		"version": "0.8.25+commit.b61c2a91"
	},
	"language": "Solidity",
	"output": {
		"abi": [
			{
				"inputs": [],
				"name": "InvalidDelegate",
				"type": "error"
			},
			{
				"inputs": [],
				"name": "InvalidEndpointCall",
				"type": "error"
			},
			{
				"inputs": [],
				"name": "LzTokenUnavailable",
				"type": "error"
			},
			{
				"inputs": [
					{
						"internalType": "uint32",
						"name": "eid",
						"type": "uint32"
					}
				],
				"name": "NoPeer",
				"type": "error"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "msgValue",
						"type": "uint256"
					}
				],
				"name": "NotEnoughNative",
				"type": "error"
			},
			{
				"inputs": [
					{
						"internalType": "uint32",
						"name": "eid",
						"type": "uint32"
					},
					{
						"internalType": "bytes32",
						"name": "sender",
						"type": "bytes32"
					}
				],
				"name": "OnlyPeer",
				"type": "error"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "owner",
						"type": "address"
					}
				],
				"name": "OwnableInvalidOwner",
				"type": "error"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "account",
						"type": "address"
					}
				],
				"name": "OwnableUnauthorizedAccount",
				"type": "error"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "previousOwner",
						"type": "address"
					},
					{
						"indexed": true,
						"internalType": "address",
						"name": "newOwner",
						"type": "address"
					}
				],
				"name": "OwnershipTransferred",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": false,
						"internalType": "uint32",
						"name": "eid",
						"type": "uint32"
					},
					{
						"indexed": false,
						"internalType": "bytes32",
						"name": "peer",
						"type": "bytes32"
					}
				],
				"name": "PeerSet",
				"type": "event"
			},
			{
				"inputs": [],
				"name": "endpoint",
				"outputs": [
					{
						"internalType": "contract ILayerZeroEndpointV2",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "oAppVersion",
				"outputs": [
					{
						"internalType": "uint64",
						"name": "senderVersion",
						"type": "uint64"
					},
					{
						"internalType": "uint64",
						"name": "receiverVersion",
						"type": "uint64"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "owner",
				"outputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint32",
						"name": "eid",
						"type": "uint32"
					}
				],
				"name": "peers",
				"outputs": [
					{
						"internalType": "bytes32",
						"name": "peer",
						"type": "bytes32"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "renounceOwnership",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "_delegate",
						"type": "address"
					}
				],
				"name": "setDelegate",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint32",
						"name": "_eid",
						"type": "uint32"
					},
					{
						"internalType": "bytes32",
						"name": "_peer",
						"type": "bytes32"
					}
				],
				"name": "setPeer",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "newOwner",
						"type": "address"
					}
				],
				"name": "transferOwnership",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			}
		],
		"devdoc": {
			"errors": {
				"OwnableInvalidOwner(address)": [
					{
						"details": "The owner is not a valid owner account. (eg. `address(0)`)"
					}
				],
				"OwnableUnauthorizedAccount(address)": [
					{
						"details": "The caller account is not authorized to perform an operation."
					}
				]
			},
			"kind": "dev",
			"methods": {
				"oAppVersion()": {
					"details": "Providing 0 as the default for OAppReceiver version. Indicates that the OAppReceiver is not implemented. ie. this is a SEND only OApp.If the OApp uses both OAppSender and OAppReceiver, then this needs to be override returning the correct versions",
					"returns": {
						"receiverVersion": "The version of the OAppReceiver.sol contract.",
						"senderVersion": "The version of the OAppSender.sol contract."
					}
				},
				"owner()": {
					"details": "Returns the address of the current owner."
				},
				"renounceOwnership()": {
					"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
				},
				"setDelegate(address)": {
					"details": "Only the owner/admin of the OApp can call this function.Provides the ability for a delegate to set configs, on behalf of the OApp, directly on the Endpoint contract.",
					"params": {
						"_delegate": "The address of the delegate to be set."
					}
				},
				"setPeer(uint32,bytes32)": {
					"details": "Only the owner/admin of the OApp can call this function.Indicates that the peer is trusted to send LayerZero messages to this OApp.Set this to bytes32(0) to remove the peer address.Peer is a bytes32 to accommodate non-evm chains.",
					"params": {
						"_eid": "The endpoint ID.",
						"_peer": "The address of the peer to be associated with the corresponding endpoint."
					}
				},
				"transferOwnership(address)": {
					"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
				}
			},
			"version": 1
		},
		"userdoc": {
			"kind": "user",
			"methods": {
				"endpoint()": {
					"notice": "Retrieves the LayerZero endpoint associated with the OApp."
				},
				"oAppVersion()": {
					"notice": "Retrieves the OApp version information."
				},
				"peers(uint32)": {
					"notice": "Retrieves the peer (OApp) associated with a corresponding endpoint."
				},
				"setDelegate(address)": {
					"notice": "Sets the delegate address for the OApp."
				},
				"setPeer(uint32,bytes32)": {
					"notice": "Sets the peer address (OApp instance) for a corresponding endpoint."
				}
			},
			"version": 1
		}
	},
	"settings": {
		"compilationTarget": {
			"src/utils/TenderlyUpload.sol": "OAppSender"
		},
		"evmVersion": "cancun",
		"libraries": {},
		"metadata": {
			"bytecodeHash": "ipfs"
		},
		"optimizer": {
			"enabled": true,
			"runs": 50
		},
		"remappings": [
			":@lz-oapp-v2/=lib/lz-oapp-v2/src/",
			":@openzeppelin/=lib/openzeppelin-contracts/",
			":ds-test/=lib/forge-std/lib/ds-test/src/",
			":forge-std/=lib/forge-std/",
			":forge-std/=lib/forge-std/src/"
		]
	},
	"sources": {
		"src/utils/TenderlyUpload.sol": {
			"keccak256": "0xd44221ee180c1a062de1ebc0829cb284d723e63f0f2c3670150c06e23d206657",
			"license": "MIT",
			"urls": [
				"bzz-raw://369ce46afdefe5ea91a495bb01435edc31c79ba683a007ef112fc977b72d6ab0",
				"dweb:/ipfs/QmRsYsdHqqQw9NSsXD1q88eep75SFZZDvGf62i9UXtEF2s"
			]
		}
	},
	"version": 1
}